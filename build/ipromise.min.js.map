{"version":3,"sources":["ipromise.js"],"names":["exports","thenable","x","t","then","execCallbacks","promise","valueORreason","_state","PENDING","FULFILLED","i","_fulfillCallbacks","length","call","splice","REJECTED","_rejectCallbacks","resolve","reject","TypeError","constructor","iPromise","_value","fulfill","_reason","firstCall","y","r","e","value","setTimeout","reason","resolver","this","isFunction","obj","Object","prototype","toString","onFulfilled","onRejected","thisPromise","thenPromise","thenResolve","thenReject","push","thisValue","afterOnFulfilled","exception","thisReason","all","promises","ready","val","stack","race","_resolve","_reject","onlyOne","len","error","window"],"mappings":"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","file":"ipromise.min.js","sourcesContent":["/*/\r\n/// author: zcoding\r\n/// version: 0.2.0\r\n/// repository: https://github.com/zcoding/spa-promise.git\r\n/*/\r\n\r\n(function(exports) {\r\n\nvar PENDING = 0,\r\n    FULFILLED = 1,\r\n    REJECTED = 2; \r\n\r\nvar isFunction = function(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object Function]';\r\n};\r\n\r\nfunction thenable(x) {\r\n  var t = typeof x;\r\n  if (x && (t === 'object' || t === 'function') && typeof x.then === 'function') { // 2.3.3\r\n    return x.then;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction execCallbacks(promise, valueORreason) {\r\n  if (promise._state === PENDING) {\r\n    return;\r\n  } else if (promise._state === FULFILLED) {\r\n    for (var i = 0; i < promise._fulfillCallbacks.length; ++i) {\r\n      promise._fulfillCallbacks[i].call(null, valueORreason); // 2.2.5\r\n    }\r\n    promise._fulfillCallbacks.splice(0);\r\n  } else if (promise._state === REJECTED) {\r\n    for (var i = 0; i < promise._rejectCallbacks.length; ++i) {\r\n      promise._rejectCallbacks[i].call(null, valueORreason); // 2.2.5\r\n    }\r\n    promise._rejectCallbacks.splice(0);\r\n  }\r\n}\r\n\r\n/**\r\n * 2.3 The Promise Resolution Procedure\r\n * @param {iPromise} promise\r\n * @param {Object} x\r\n */\r\nfunction resolve(promise, x) {\r\n  if (promise === x) {\r\n    reject(promise, new TypeError('The promise and its value refer to the same object.')); // 2.3.1\r\n  } else if (x && x.constructor === iPromise) { // 2.3.2\r\n    if (x._state === PENDING) { // 2.3.2.1\r\n      x.then(function(_value) {\r\n        fulfill(promise, _value); // 2.3.2.2\r\n      }, function(_reason) {\r\n        reject(promise, _reason); // 2.3.2.3\r\n      });\r\n    } else if (x._state === FULFILLED) {\r\n      fulfill(promise, x._value); // 2.3.2.2\r\n    } else if (x._state === REJECTED) {\r\n      reject(promise, x._reason); // 2.3.2.3\r\n    }\r\n  } else {\r\n    var firstCall = true;\r\n    try {\r\n      var then = thenable(x); // 2.3.3.1\r\n      if (then) {\r\n        then.call(x, function(y) { // 2.3.3.3\r\n          if (firstCall) { // 2.3.3.3.3\r\n            resolve(promise, y); // 2.3.3.3.1\r\n            firstCall = false;\r\n          }\r\n        }, function(r) {\r\n          if (firstCall) { // 2.3.3.3.3\r\n            reject(promise, r); // 2.3.3.3.2\r\n            firstCall = false;\r\n          }\r\n        });\r\n      } else {\r\n        fulfill(promise, x); // 2.3.3.4, 2.3.4\r\n      }\r\n    } catch (e) {\r\n      if (firstCall) { // 2.3.3.3.3\r\n        reject(promise, e); // 2.3.3.2\r\n        firstCall = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction fulfill(promise, value) {\r\n  if (promise._state === PENDING) {\r\n    promise._state = FULFILLED;\r\n    promise._value = value;\r\n    setTimeout(function() {\r\n      execCallbacks(promise, value);\r\n    }, 0);\r\n  }\r\n}\r\n\r\nfunction reject(promise, reason) {\r\n  if (promise._state === PENDING) {\r\n    promise._state = REJECTED;\r\n    promise._reason = reason;\r\n    setTimeout(function() {\r\n      execCallbacks(promise, reason);\r\n    }, 0);\r\n  }\r\n}\r\n\r\nfunction iPromise(resolver) {\r\n  this._value = null;\r\n  this._reason = null;\r\n  this._state = PENDING;\r\n  this._fulfillCallbacks = [];\r\n  this._rejectCallbacks = [];\r\n  \r\n  var promise = this;\r\n  // do resolver\r\n  resolver(function(value) {\r\n    resolve(promise, value);\r\n  }, function(reason) {\r\n    reject(promise, reason);\r\n  });\r\n}\r\n\r\niPromise.prototype.then = function(onFulfilled, onRejected) {\r\n  var thisPromise = this;\r\n  var thenPromise = new iPromise(function(thenResolve, thenReject) {\r\n    thisPromise._fulfillCallbacks.push(function(thisValue) { // 2.2.6.1\r\n      if (isFunction(onFulfilled)) { // 2.2.1.1\r\n        try {\r\n          var afterOnFulfilled = onFulfilled(thisValue); // 2.2.2.1\r\n          thenResolve(afterOnFulfilled); // 2.2.7.1\r\n        } catch (exception) { // 2.2.7.2\r\n          thenReject(exception);\r\n        }\r\n      } else {\r\n        thenResolve(thisValue); // 2.2.7.3\r\n      }\r\n    });\r\n    thisPromise._rejectCallbacks.push(function(thisReason) { // 2.2.6.2\r\n      if (isFunction(onRejected)) { // 2.2.1.2\r\n        try {\r\n          var afterOnRejected = onRejected(thisReason); // 2.2.3.1\r\n          thenResolve(afterOnFulfilled);\r\n        } catch(exception) { // 2.2.7.2\r\n          thenReject(exception);\r\n        }\r\n      } else {\r\n        thenReject(thisReason); // 2.2.7.4\r\n      }\r\n    });\r\n  });\r\n  return thenPromise; // 2.2.7\r\n};\r\n\r\niPromise.prototype.catch = function(onRejected) {\r\n  return this.then(null, onRejected);\r\n};\r\n\r\n/**\r\n * iPromise.all(promises)\r\n * @static\r\n * @param {Array} promises\r\n * @return {iPromise}\r\n */\r\niPromise.all = function(promises) {\r\n  var stack = [];\r\n  var ready = iPromise.resolve(null);\r\n  function then(promise) {\r\n    ready = ready.then(function() {\r\n      return promise;\r\n    }).then(function(val) {\r\n      stack.push(val);\r\n    });\r\n  }\r\n  for (var i = 0; i < promises.length; ++i) {\r\n    then(promises[i]);\r\n  }\r\n  return ready.then(function() {\r\n    return stack;\r\n  });\r\n};\r\n\r\n/**\r\n * iPromise.race(promises)\r\n * @static\r\n * @param {Array} promises\r\n * @return {iPromise}\r\n */\r\niPromise.race = function(promises) {\r\n  return new iPromise(function(_resolve, _reject) {\r\n    var onlyOne = true;\r\n    for (var i = 0, len = promises.length; i < len; ++i) {\r\n      var promise = promises[i];\r\n      promise.then(function(value) {\r\n        if (onlyOne) {\r\n          onlyOne = false;\r\n          _resolve(value);\r\n        }\r\n      }, function(error) {\r\n        if (onlyOne) {\r\n          onlyOne = false;\r\n          _reject(error);\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\niPromise.resolve = function(value) {\r\n  return new iPromise(function(_resolve, _reject) {\r\n    _resolve(value);\r\n  });\r\n};\r\n\r\niPromise.reject = function(reason) {\r\n  return new iPromise(function(_resolve, _reject) {\r\n    _reject(reason);\r\n  });\r\n};\r\n\r\nexports.iPromise = iPromise;\r\n\n})(window);\r\n"],"sourceRoot":"/source/"}